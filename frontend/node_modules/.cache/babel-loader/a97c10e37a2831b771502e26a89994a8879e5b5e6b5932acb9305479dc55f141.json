{"ast":null,"code":"import { handlePasskeyError } from './handlePasskeyError.mjs';\nimport { PasskeyError, passkeyErrorMap, PasskeyErrorCode } from './passkeyError.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\n/**\n * Handle Passkey Authentication Errors\n * https://w3c.github.io/webauthn/#sctn-get-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nconst handlePasskeyAuthenticationError = err => {\n  if (err instanceof PasskeyError) {\n    return err;\n  }\n  if (err instanceof Error) {\n    if (err.name === 'NotAllowedError') {\n      const {\n        message,\n        recoverySuggestion\n      } = passkeyErrorMap[PasskeyErrorCode.PasskeyAuthenticationCanceled];\n      return new PasskeyError({\n        name: PasskeyErrorCode.PasskeyAuthenticationCanceled,\n        message,\n        recoverySuggestion,\n        underlyingError: err\n      });\n    }\n  }\n  return handlePasskeyError(err);\n};\nexport { handlePasskeyAuthenticationError };","map":{"version":3,"names":["handlePasskeyAuthenticationError","err","PasskeyError","Error","name","message","recoverySuggestion","passkeyErrorMap","PasskeyErrorCode","PasskeyAuthenticationCanceled","underlyingError","handlePasskeyError"],"sources":["/Users/fatimaali/Desktop/VISION-RT-BP/frontend/node_modules/@aws-amplify/auth/src/client/utils/passkey/errors/handlePasskeyAuthenticationError.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { handlePasskeyError } from './handlePasskeyError';\nimport { PasskeyError, PasskeyErrorCode, passkeyErrorMap, } from './passkeyError';\n/**\n * Handle Passkey Authentication Errors\n * https://w3c.github.io/webauthn/#sctn-get-request-exceptions\n *\n * @param err unknown\n * @returns PasskeyError\n */\nexport const handlePasskeyAuthenticationError = (err) => {\n    if (err instanceof PasskeyError) {\n        return err;\n    }\n    if (err instanceof Error) {\n        if (err.name === 'NotAllowedError') {\n            const { message, recoverySuggestion } = passkeyErrorMap[PasskeyErrorCode.PasskeyAuthenticationCanceled];\n            return new PasskeyError({\n                name: PasskeyErrorCode.PasskeyAuthenticationCanceled,\n                message,\n                recoverySuggestion,\n                underlyingError: err,\n            });\n        }\n    }\n    return handlePasskeyError(err);\n};\n"],"mappings":";;;AAAA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACY,MAACA,gCAAgC,GAAIC,GAAG,IAAK;EACrD,IAAIA,GAAG,YAAYC,YAAY,EAAE;IAC7B,OAAOD,GAAG;EACd;EACA,IAAIA,GAAG,YAAYE,KAAK,EAAE;IACtB,IAAIF,GAAG,CAACG,IAAI,KAAK,iBAAiB,EAAE;MAChC,MAAM;QAAEC,OAAO;QAAEC;MAAkB,CAAE,GAAGC,eAAe,CAACC,gBAAgB,CAACC,6BAA6B,CAAC;MACvG,OAAO,IAAIP,YAAY,CAAC;QACpBE,IAAI,EAAEI,gBAAgB,CAACC,6BAA6B;QACpDJ,OAAO;QACPC,kBAAkB;QAClBI,eAAe,EAAET;MACjC,CAAa,CAAC;IACN;EACJ;EACA,OAAOU,kBAAkB,CAACV,GAAG,CAAC;AAClC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}