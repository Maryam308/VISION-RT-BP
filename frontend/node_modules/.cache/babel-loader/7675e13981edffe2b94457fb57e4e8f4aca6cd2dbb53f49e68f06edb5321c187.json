{"ast":null,"code":"import { createAssertionFunction, AmplifyError } from '@aws-amplify/core/internals/utils';\nimport { NOT_SUPPORTED_RECOVERY_SUGGESTION } from './passkeyErrorPlatformConstants.mjs';\n\n// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nclass PasskeyError extends AmplifyError {\n  constructor(params) {\n    super(params);\n    // Hack for making the custom error class work when transpiled to es5\n    // TODO: Delete the following 2 lines after we change the build target to >= es2015\n    this.constructor = PasskeyError;\n    Object.setPrototypeOf(this, PasskeyError.prototype);\n  }\n}\nvar PasskeyErrorCode;\n(function (PasskeyErrorCode) {\n  // not supported\n  PasskeyErrorCode[\"PasskeyNotSupported\"] = \"PasskeyNotSupported\";\n  // duplicate passkey\n  PasskeyErrorCode[\"PasskeyAlreadyExists\"] = \"PasskeyAlreadyExists\";\n  // misconfigurations\n  PasskeyErrorCode[\"InvalidPasskeyRegistrationOptions\"] = \"InvalidPasskeyRegistrationOptions\";\n  PasskeyErrorCode[\"InvalidPasskeyAuthenticationOptions\"] = \"InvalidPasskeyAuthenticationOptions\";\n  PasskeyErrorCode[\"RelyingPartyMismatch\"] = \"RelyingPartyMismatch\";\n  // failed credential creation / retrieval\n  PasskeyErrorCode[\"PasskeyRegistrationFailed\"] = \"PasskeyRegistrationFailed\";\n  PasskeyErrorCode[\"PasskeyRetrievalFailed\"] = \"PasskeyRetrievalFailed\";\n  // cancel / aborts\n  PasskeyErrorCode[\"PasskeyRegistrationCanceled\"] = \"PasskeyRegistrationCanceled\";\n  PasskeyErrorCode[\"PasskeyAuthenticationCanceled\"] = \"PasskeyAuthenticationCanceled\";\n  PasskeyErrorCode[\"PasskeyOperationAborted\"] = \"PasskeyOperationAborted\";\n})(PasskeyErrorCode || (PasskeyErrorCode = {}));\nconst ABORT_OR_CANCEL_RECOVERY_SUGGESTION = 'User may have canceled the ceremony or another interruption has occurred. Check underlying error for details.';\nconst MISCONFIGURATION_RECOVERY_SUGGESTION = 'Ensure your user pool is configured to support the WEB_AUTHN as an authentication factor.';\nconst passkeyErrorMap = {\n  [PasskeyErrorCode.PasskeyNotSupported]: {\n    message: 'Passkeys may not be supported on this device.',\n    recoverySuggestion: NOT_SUPPORTED_RECOVERY_SUGGESTION\n  },\n  [PasskeyErrorCode.InvalidPasskeyRegistrationOptions]: {\n    message: 'Invalid passkey registration options.',\n    recoverySuggestion: MISCONFIGURATION_RECOVERY_SUGGESTION\n  },\n  [PasskeyErrorCode.InvalidPasskeyAuthenticationOptions]: {\n    message: 'Invalid passkey authentication options.',\n    recoverySuggestion: MISCONFIGURATION_RECOVERY_SUGGESTION\n  },\n  [PasskeyErrorCode.PasskeyRegistrationFailed]: {\n    message: 'Device failed to create passkey.',\n    recoverySuggestion: NOT_SUPPORTED_RECOVERY_SUGGESTION\n  },\n  [PasskeyErrorCode.PasskeyRetrievalFailed]: {\n    message: 'Device failed to retrieve passkey.',\n    recoverySuggestion: 'Passkeys may not be available on this device. Try an alternative authentication factor like PASSWORD, EMAIL_OTP, or SMS_OTP.'\n  },\n  [PasskeyErrorCode.PasskeyAlreadyExists]: {\n    message: 'Passkey already exists in authenticator.',\n    recoverySuggestion: 'Proceed with existing passkey or try again after deleting the credential.'\n  },\n  [PasskeyErrorCode.PasskeyRegistrationCanceled]: {\n    message: 'Passkey registration ceremony has been canceled.',\n    recoverySuggestion: ABORT_OR_CANCEL_RECOVERY_SUGGESTION\n  },\n  [PasskeyErrorCode.PasskeyAuthenticationCanceled]: {\n    message: 'Passkey authentication ceremony has been canceled.',\n    recoverySuggestion: ABORT_OR_CANCEL_RECOVERY_SUGGESTION\n  },\n  [PasskeyErrorCode.PasskeyOperationAborted]: {\n    message: 'Passkey operation has been aborted.',\n    recoverySuggestion: ABORT_OR_CANCEL_RECOVERY_SUGGESTION\n  },\n  [PasskeyErrorCode.RelyingPartyMismatch]: {\n    message: 'Relying party does not match current domain.',\n    recoverySuggestion: 'Ensure relying party identifier matches current domain.'\n  }\n};\nconst assertPasskeyError = createAssertionFunction(passkeyErrorMap, PasskeyError);\nexport { PasskeyError, PasskeyErrorCode, assertPasskeyError, passkeyErrorMap };","map":{"version":3,"names":["PasskeyError","AmplifyError","constructor","params","Object","setPrototypeOf","prototype","PasskeyErrorCode","ABORT_OR_CANCEL_RECOVERY_SUGGESTION","MISCONFIGURATION_RECOVERY_SUGGESTION","passkeyErrorMap","PasskeyNotSupported","message","recoverySuggestion","NOT_SUPPORTED_RECOVERY_SUGGESTION","InvalidPasskeyRegistrationOptions","InvalidPasskeyAuthenticationOptions","PasskeyRegistrationFailed","PasskeyRetrievalFailed","PasskeyAlreadyExists","PasskeyRegistrationCanceled","PasskeyAuthenticationCanceled","PasskeyOperationAborted","RelyingPartyMismatch","assertPasskeyError","createAssertionFunction"],"sources":["/Users/fatimaali/Desktop/VISION-RT-BP/frontend/node_modules/@aws-amplify/auth/src/client/utils/passkey/errors/passkeyError.ts"],"sourcesContent":["// Copyright Amazon.com, Inc. or its affiliates. All Rights Reserved.\n// SPDX-License-Identifier: Apache-2.0\nimport { AmplifyError, createAssertionFunction, } from '@aws-amplify/core/internals/utils';\nimport { NOT_SUPPORTED_RECOVERY_SUGGESTION } from './passkeyErrorPlatformConstants';\nexport class PasskeyError extends AmplifyError {\n    constructor(params) {\n        super(params);\n        // Hack for making the custom error class work when transpiled to es5\n        // TODO: Delete the following 2 lines after we change the build target to >= es2015\n        this.constructor = PasskeyError;\n        Object.setPrototypeOf(this, PasskeyError.prototype);\n    }\n}\nexport var PasskeyErrorCode;\n(function (PasskeyErrorCode) {\n    // not supported\n    PasskeyErrorCode[\"PasskeyNotSupported\"] = \"PasskeyNotSupported\";\n    // duplicate passkey\n    PasskeyErrorCode[\"PasskeyAlreadyExists\"] = \"PasskeyAlreadyExists\";\n    // misconfigurations\n    PasskeyErrorCode[\"InvalidPasskeyRegistrationOptions\"] = \"InvalidPasskeyRegistrationOptions\";\n    PasskeyErrorCode[\"InvalidPasskeyAuthenticationOptions\"] = \"InvalidPasskeyAuthenticationOptions\";\n    PasskeyErrorCode[\"RelyingPartyMismatch\"] = \"RelyingPartyMismatch\";\n    // failed credential creation / retrieval\n    PasskeyErrorCode[\"PasskeyRegistrationFailed\"] = \"PasskeyRegistrationFailed\";\n    PasskeyErrorCode[\"PasskeyRetrievalFailed\"] = \"PasskeyRetrievalFailed\";\n    // cancel / aborts\n    PasskeyErrorCode[\"PasskeyRegistrationCanceled\"] = \"PasskeyRegistrationCanceled\";\n    PasskeyErrorCode[\"PasskeyAuthenticationCanceled\"] = \"PasskeyAuthenticationCanceled\";\n    PasskeyErrorCode[\"PasskeyOperationAborted\"] = \"PasskeyOperationAborted\";\n})(PasskeyErrorCode || (PasskeyErrorCode = {}));\nconst ABORT_OR_CANCEL_RECOVERY_SUGGESTION = 'User may have canceled the ceremony or another interruption has occurred. Check underlying error for details.';\nconst MISCONFIGURATION_RECOVERY_SUGGESTION = 'Ensure your user pool is configured to support the WEB_AUTHN as an authentication factor.';\nexport const passkeyErrorMap = {\n    [PasskeyErrorCode.PasskeyNotSupported]: {\n        message: 'Passkeys may not be supported on this device.',\n        recoverySuggestion: NOT_SUPPORTED_RECOVERY_SUGGESTION,\n    },\n    [PasskeyErrorCode.InvalidPasskeyRegistrationOptions]: {\n        message: 'Invalid passkey registration options.',\n        recoverySuggestion: MISCONFIGURATION_RECOVERY_SUGGESTION,\n    },\n    [PasskeyErrorCode.InvalidPasskeyAuthenticationOptions]: {\n        message: 'Invalid passkey authentication options.',\n        recoverySuggestion: MISCONFIGURATION_RECOVERY_SUGGESTION,\n    },\n    [PasskeyErrorCode.PasskeyRegistrationFailed]: {\n        message: 'Device failed to create passkey.',\n        recoverySuggestion: NOT_SUPPORTED_RECOVERY_SUGGESTION,\n    },\n    [PasskeyErrorCode.PasskeyRetrievalFailed]: {\n        message: 'Device failed to retrieve passkey.',\n        recoverySuggestion: 'Passkeys may not be available on this device. Try an alternative authentication factor like PASSWORD, EMAIL_OTP, or SMS_OTP.',\n    },\n    [PasskeyErrorCode.PasskeyAlreadyExists]: {\n        message: 'Passkey already exists in authenticator.',\n        recoverySuggestion: 'Proceed with existing passkey or try again after deleting the credential.',\n    },\n    [PasskeyErrorCode.PasskeyRegistrationCanceled]: {\n        message: 'Passkey registration ceremony has been canceled.',\n        recoverySuggestion: ABORT_OR_CANCEL_RECOVERY_SUGGESTION,\n    },\n    [PasskeyErrorCode.PasskeyAuthenticationCanceled]: {\n        message: 'Passkey authentication ceremony has been canceled.',\n        recoverySuggestion: ABORT_OR_CANCEL_RECOVERY_SUGGESTION,\n    },\n    [PasskeyErrorCode.PasskeyOperationAborted]: {\n        message: 'Passkey operation has been aborted.',\n        recoverySuggestion: ABORT_OR_CANCEL_RECOVERY_SUGGESTION,\n    },\n    [PasskeyErrorCode.RelyingPartyMismatch]: {\n        message: 'Relying party does not match current domain.',\n        recoverySuggestion: 'Ensure relying party identifier matches current domain.',\n    },\n};\nexport const assertPasskeyError = createAssertionFunction(passkeyErrorMap, PasskeyError);\n"],"mappings":";;;AAAA;AACA;AAGO,MAAMA,YAAY,SAASC,YAAY,CAAC;EAC3CC,WAAWA,CAACC,MAAM,EAAE;IAChB,KAAK,CAACA,MAAM,CAAC;IACrB;IACA;IACQ,IAAI,CAACD,WAAW,GAAGF,YAAY;IAC/BI,MAAM,CAACC,cAAc,CAAC,IAAI,EAAEL,YAAY,CAACM,SAAS,CAAC;EACvD;AACJ;AACU,IAACC,gBAAA;AACX,CAAC,UAAUA,gBAAgB,EAAE;EAC7B;EACIA,gBAAgB,CAAC,qBAAqB,CAAC,GAAG,qBAAqB;EACnE;EACIA,gBAAgB,CAAC,sBAAsB,CAAC,GAAG,sBAAsB;EACrE;EACIA,gBAAgB,CAAC,mCAAmC,CAAC,GAAG,mCAAmC;EAC3FA,gBAAgB,CAAC,qCAAqC,CAAC,GAAG,qCAAqC;EAC/FA,gBAAgB,CAAC,sBAAsB,CAAC,GAAG,sBAAsB;EACrE;EACIA,gBAAgB,CAAC,2BAA2B,CAAC,GAAG,2BAA2B;EAC3EA,gBAAgB,CAAC,wBAAwB,CAAC,GAAG,wBAAwB;EACzE;EACIA,gBAAgB,CAAC,6BAA6B,CAAC,GAAG,6BAA6B;EAC/EA,gBAAgB,CAAC,+BAA+B,CAAC,GAAG,+BAA+B;EACnFA,gBAAgB,CAAC,yBAAyB,CAAC,GAAG,yBAAyB;AAC3E,CAAC,EAAEA,gBAAgB,KAAKA,gBAAgB,GAAG,EAAE,CAAC,CAAC;AAC/C,MAAMC,mCAAmC,GAAG,+GAA+G;AAC3J,MAAMC,oCAAoC,GAAG,2FAA2F;AAC5H,MAACC,eAAe,GAAG;EAC3B,CAACH,gBAAgB,CAACI,mBAAmB,GAAG;IACpCC,OAAO,EAAE,+CAA+C;IACxDC,kBAAkB,EAAEC;EAC5B,CAAK;EACD,CAACP,gBAAgB,CAACQ,iCAAiC,GAAG;IAClDH,OAAO,EAAE,uCAAuC;IAChDC,kBAAkB,EAAEJ;EAC5B,CAAK;EACD,CAACF,gBAAgB,CAACS,mCAAmC,GAAG;IACpDJ,OAAO,EAAE,yCAAyC;IAClDC,kBAAkB,EAAEJ;EAC5B,CAAK;EACD,CAACF,gBAAgB,CAACU,yBAAyB,GAAG;IAC1CL,OAAO,EAAE,kCAAkC;IAC3CC,kBAAkB,EAAEC;EAC5B,CAAK;EACD,CAACP,gBAAgB,CAACW,sBAAsB,GAAG;IACvCN,OAAO,EAAE,oCAAoC;IAC7CC,kBAAkB,EAAE;EAC5B,CAAK;EACD,CAACN,gBAAgB,CAACY,oBAAoB,GAAG;IACrCP,OAAO,EAAE,0CAA0C;IACnDC,kBAAkB,EAAE;EAC5B,CAAK;EACD,CAACN,gBAAgB,CAACa,2BAA2B,GAAG;IAC5CR,OAAO,EAAE,kDAAkD;IAC3DC,kBAAkB,EAAEL;EAC5B,CAAK;EACD,CAACD,gBAAgB,CAACc,6BAA6B,GAAG;IAC9CT,OAAO,EAAE,oDAAoD;IAC7DC,kBAAkB,EAAEL;EAC5B,CAAK;EACD,CAACD,gBAAgB,CAACe,uBAAuB,GAAG;IACxCV,OAAO,EAAE,qCAAqC;IAC9CC,kBAAkB,EAAEL;EAC5B,CAAK;EACD,CAACD,gBAAgB,CAACgB,oBAAoB,GAAG;IACrCX,OAAO,EAAE,8CAA8C;IACvDC,kBAAkB,EAAE;EAC5B;AACA;AACY,MAACW,kBAAkB,GAAGC,uBAAuB,CAACf,eAAe,EAAEV,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}